---
import "@/styles/globals.css";

import { Picture } from "astro:assets";

import ThemeToggle from "@/components/ThemeToggle.astro";
import MenuDrawer from "@/components/MenuDrawer";
import Icon from "@/components/Icon.astro";
import { navItems, notifications, messages, userMenu } from "@/data";

import avatar from "@/public/mtn_avatar.png";

const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"
      rel="stylesheet"
    />
  </head>
  <body class="bg-gray-100 text-foreground dark:bg-gray-900">
    <div class="flex h-screen">
      <!-- Sidebar -->
      <aside class="fixed hidden h-screen w-64 flex-col bg-background md:flex">
        <div
          class="flex items-center border-b px-4 py-[18px] leading-none dark:border-gray-700"
        >
          <div
            class="flex items-center gap-2 text-2xl font-bold text-foreground"
          >
            <Icon icon="dataVizLogo" size="1.5em" />
            {title}
          </div>
        </div>
        <nav class="flex-grow">
          <ul class="space-y-2 py-4">
            {
              navItems.map((item) => (
                <li>
                  <a
                    href={item.href}
                    class="flex items-center gap-2 px-4 py-2 text-gray-700 hover:bg-gray-200 dark:text-gray-300 dark:hover:bg-gray-800"
                  >
                    <Icon icon={item.icon} size="1.5em" />
                    {item.title}
                  </a>
                </li>
              ))
            }
          </ul>
        </nav>
      </aside>

      <!-- Main Content -->
      <div class="flex flex-1 flex-col md:ml-64">
        <!-- Top Bar -->
        <header
          class="flex items-center justify-between border-b bg-background px-6 py-4 dark:border-gray-700"
        >
          <div class="md:hidden">
            <MenuDrawer client:load title={title}>
              <Icon icon="dataVizLogo" size="1.5em" slot="logo" />
              {
                navItems.map((item) => (
                  <li slot="navItems">
                    <a
                      href={item.href}
                      class="flex items-center gap-2 px-4 py-2 text-foreground hover:bg-gray-200 dark:hover:bg-gray-800"
                    >
                      <Icon icon={item.icon} size="1.5em" />
                      {item.title}
                    </a>
                  </li>
                ))
              }
            </MenuDrawer>
          </div>

          <div class="ml-auto flex items-center gap-4">
            <ThemeToggle />

            <!-- Notifications Dropdown -->
            <div class="relative" x-data="{ openNotifications: false }" x-cloak>
              <button
                class="rounded-full p-2 hover:bg-gray-200 dark:hover:bg-gray-800"
                x-on:click="openNotifications = ! openNotifications"
              >
                <Icon icon="bell" size="1.5em" />
              </button>
              <div
                x-show="openNotifications"
                x-transition
                class="absolute -right-1/2 mt-2 w-72 rounded-md bg-white py-1 shadow-lg dark:bg-gray-800"
              >
                {
                  notifications.map((notification) => (
                    <a
                      href="#"
                      @click.away="openNotifications = false"
                      class="block px-4 py-2 text-sm text-foreground hover:bg-gray-100 dark:hover:bg-gray-700"
                    >
                      <p class="font-medium">{notification.message}</p>
                      <p class="text-xs text-gray-500 dark:text-gray-400">
                        {notification.time}
                      </p>
                    </a>
                  ))
                }
              </div>
            </div>

            <!-- Chat Dropdown -->
            <div class="relative" x-data="{ openChat: false }">
              <button
                class="rounded-full p-2 hover:bg-gray-200 dark:hover:bg-gray-800"
                x-on:click="openChat = ! openChat"
              >
                <Icon icon="chat" size="1.5em" />
              </button>
              <div
                x-show="openChat"
                x-transition
                class="absolute right-0 mt-2 w-72 rounded-md bg-white py-1 shadow-lg dark:bg-gray-800"
              >
                {
                  messages.map((message) => (
                    <a
                      href="#"
                      @click.away="openChat = false"
                      class="block px-4 py-2 text-sm text-foreground hover:bg-gray-100 dark:hover:bg-gray-700"
                    >
                      <p class="font-medium">{message.user}</p>
                      <p class="text-xs">{message.message}</p>
                      <p class="text-xs text-gray-500 dark:text-gray-400">
                        {message.time}
                      </p>
                    </a>
                  ))
                }
              </div>
            </div>

            <!-- User Avatar Menu -->
            <div class="relative" x-data="{ openUserMenu: false }" x-cloak>
              <button
                class="flex items-center gap-2"
                x-on:click="openUserMenu = ! openUserMenu"
              >
                <span class="hidden font-medium md:flex">Seth Hall</span>
                <div class="size-10">
                  <Picture
                    src={avatar}
                    alt="User Avatar"
                    loading="eager"
                    class="w-full rounded-full object-cover"
                  />
                </div>
                <div :class="openUserMenu ? 'rotate-180' : 'rotate-0'">
                  <Icon icon="caretDown" size="1.5em" />
                </div>
              </button>
              <div
                x-show="openUserMenu"
                x-transition
                class="absolute right-0 mt-2 w-48 rounded-md bg-white py-1 shadow-lg dark:bg-gray-800"
              >
                {
                  userMenu.map((item, index) => (
                    <div>
                      <a
                        href={item.href}
                        @click.away="openUserMenu = false"
                        class="flex items-center gap-4 px-4 py-2 text-sm text-foreground hover:bg-gray-100 dark:hover:bg-gray-700"
                      >
                        <Icon icon={item.icon} size="1.5em" />
                        {item.title}
                      </a>
                      {index === userMenu.length - 2 && (
                        <hr class="my-2 border-t dark:border-gray-700" />
                      )}
                    </div>
                  ))
                }
              </div>
            </div>
          </div>
        </header>

        <!-- Page Content -->
        <main class="container max-w-none overflow-auto p-6">
          <slot />
        </main>
      </div>
    </div>
  </body>
</html>
